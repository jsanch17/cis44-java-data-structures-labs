public class MaxSubarraySolver {

    public static int bruteForceMaxSum(int[] arr) {
        int maxSum = Integer.MIN_VALUE;

        for (int i = 0; i < arr.length; i++) { // n iterations
            int currentSum = 0;
            for (int j = i; j < arr.length; j++) { // up to n iterations
                currentSum += arr[j]; // primitive operation
                if (currentSum > maxSum) {
                    maxSum = currentSum; // primitive operation
                }
            }
        }

        return maxSum;
    }


    public static int kadanesAlgorithmMaxSum(int[] arr) {
        int maxCurrent = arr[0];
        int maxGlobal = arr[0];

        for (int i = 1; i < arr.length; i++) {
            // Choose max between current element and current + previous max
            maxCurrent = Math.max(arr[i], maxCurrent + arr[i]);
            maxGlobal = Math.max(maxGlobal, maxCurrent);
        }

        return maxGlobal;
    }
}
